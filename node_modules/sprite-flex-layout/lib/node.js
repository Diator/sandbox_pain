'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty = require('babel-runtime/core-js/object/define-property');

var _defineProperty2 = _interopRequireDefault(_defineProperty);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _config = require('./config');

var _config2 = _interopRequireDefault(_config);

var _compose = require('./compose');

var _compose2 = _interopRequireDefault(_compose);

var _util = require('./util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var id = 1;

var Node = function () {
  function Node(config) {
    (0, _classCallCheck3.default)(this, Node);

    this.config = new _config2.default(config, this);
    this.parent = null;
    this.children = [];
    this.id = id++;
  }

  (0, _createClass3.default)(Node, [{
    key: 'appendChild',
    value: function appendChild(node) {
      if (!(node instanceof Node)) {
        throw new Error('appended Child must be instance of Node');
      }
      node.parent = this;
      this.children.push(node);
      return this;
    }
  }, {
    key: 'calculateLayout',
    value: function calculateLayout(width, height, direction) {
      if (width) this.width = width;
      if (height) this.height = height;
      if (direction) this.flexDirection = direction;
      var instance = new _compose2.default(this);
      instance.compose();
    }
  }, {
    key: 'getComputedLayout',
    value: function getComputedLayout() {
      var _this = this;

      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

      var width = this.computedWidth;
      if (width === undefined) {
        width = this.width;
      }
      var height = this.computedHeight;
      if (height === undefined) {
        height = this.height;
      }
      var layout = { left: this.left || 0, top: this.top || 0, width: width, height: height };
      props.forEach(function (item) {
        layout[item] = _this[item];
      });
      return layout;
    }
  }, {
    key: 'getAllComputedLayout',
    value: function getAllComputedLayout(props) {
      var layout = this.getComputedLayout();
      layout.children = this.children.sort(function (a, b) {
        return a.id > b.id ? 1 : -1;
      }).map(function (item) {
        return item.getComputedLayout(props);
      });
      return layout;
    }
  }], [{
    key: 'create',
    value: function create(config) {
      return new Node(config);
    }
  }]);
  return Node;
}();

_util.flexProperties.forEach(function (property) {
  (0, _defineProperty2.default)(Node.prototype, property, {
    get: function get() {
      return this.config[property];
    },
    set: function set(value) {
      this.config[property] = value;
    }
  });
});

exports.default = Node;